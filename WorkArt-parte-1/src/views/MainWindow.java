/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import DAO.ShapesDAO;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.Reader;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.midi.Patch;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import models.Circle;
import models.Ellipse;
import models.Line;
import models.Point;
import models.Rectangle;
import models.Square;
 
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    ShapesDAO shapes;
    MainPanel panel;
    int x, y, x2, y2;
    Color color_array[];

    public MainWindow(ShapesDAO shapes) {
        initComponents();
        this.shapes = shapes;
        color_array = new Color[4];
        color_array[0] = Color.green;
        color_array[1] = Color.blue;
        color_array[2] = Color.yellow;
        color_array[3] = Color.red;
    }

    public void setPanel() {
        if (panel != null) {
            this.remove(panel);
        }
        panel = new MainPanel(shapes);
        this.add(panel, BorderLayout.CENTER);
        this.setSize(1200, 850);
        this.repaint();
        drawOnMouseEvent();

    }

    private void drawOnMouseEvent() {
        MouseListener listener = new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
            }

            @Override
            public void mousePressed(MouseEvent e) {
                x = e.getX();
                y = e.getY();
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                x2 = e.getX();
                y2 = e.getY();
                if (cshape.getSelectedIndex() == 0) {
                    Circle circle = new Circle((x2 - x) / 2, new Point(x, y), color_array[ccolor.getSelectedIndex()]);
                    shapes.addShape(circle);
                }
                if (cshape.getSelectedIndex() == 1) {
                    Line line = new Line(new Point(x, y), new Point(x2, y2), color_array[ccolor.getSelectedIndex()]);
                    shapes.addShape(line);
                }
                if (cshape.getSelectedIndex() == 2) {
                    Ellipse ellipse = new Ellipse((x2 - x) / 2, (y2 - y) / 2, new Point(x, y), color_array[ccolor.getSelectedIndex()]);
                    shapes.addShape(ellipse);
                }
                if (cshape.getSelectedIndex() == 3) {
                    Square square = new Square(new Point(x, y), (x2-x),color_array[ccolor.getSelectedIndex()] );
                    shapes.addShape(square);
                }
                if (cshape.getSelectedIndex() == 4) {
                    Rectangle rectangle = new Rectangle(new Point(x, y), (x2-x), (y2-y), color_array[ccolor.getSelectedIndex()] );
                    shapes.addShape(rectangle);
                }
                panel.repaint();
            }

            @Override
            public void mouseEntered(MouseEvent e) {

            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        };
        this.panel.addMouseListener(listener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cshape = new javax.swing.JComboBox<>();
        ccolor = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cshape.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Circle", "Line", "Ellipse", "Square", "Rectangle" }));

        ccolor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Green", "Blue", "Yellow", "Red" }));

        jButton1.setText("Load Image...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(863, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cshape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cshape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ccolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 376, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser choose = new JFileChooser();
        choose.setFileFilter(new FileNameExtensionFilter("Image Files", "jpg", "png"));
        int r = choose.showOpenDialog(null);

        // if the user selects a file 
        if (r == JFileChooser.APPROVE_OPTION) {
            // set the label to the path of the selected file 
            
            panel.setBackground(choose.getSelectedFile().getAbsolutePath());
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new MainWindow().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ccolor;
    private javax.swing.JComboBox<String> cshape;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
